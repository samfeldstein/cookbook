---
import Base from "../../layouts/Base.astro";

import { getCollection } from "astro:content";

// Functions
// Generate a new path for every collection entry
export async function getStaticPaths() {
  const recipes = await getCollection("recipes");
  return recipes.map((recipe) => ({
    params: { id: recipe.id },
    props: { recipe },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { recipe } = Astro.props;
---

<Base>
  <header>
    <h1>{recipe.data.title}</h1>
    <ul class="tags">
      {
        recipe.data.tags.map((tag) => (
          <li>
            <a class="tag" href={`/recipes/tags/${tag}`}>
              <i>#{tag}</i>
            </a>
          </li>
        ))
      }
    </ul>
  </header>
  {
    recipe.data.source && (
      <p>
        Source: <a href={recipe.data.source.url}> {recipe.data.source.name}</a>.
      </p>
    )
  }

  <div class="recipe">
    {
      recipe.data.ingredients && (
        <section class="ingredients">
          <h2>Ingredients</h2>
          {recipe.data.ingredients.sections &&
          recipe.data.ingredients.sections.length > 0 ? (
            recipe.data.ingredients.sections.map((section) => (
              <div class="ingredient-section">
                <h3>{section.title}</h3>
                <ul>
                  {section.ingredients.map((ingredient) => (
                    <li>{ingredient}</li>
                  ))}
                </ul>
              </div>
            ))
          ) : (
            <ul>
              {recipe.data.ingredients.map((ingredient) => (
                <li>{ingredient}</li>
              ))}
            </ul>
          )}
        </section>
      )
    }

    {
      recipe.data.directions && (
        <section class="directions">
          <h2>Directions</h2>
          {recipe.data.directions.sections &&
          recipe.data.directions.sections.length > 0 ? (
            recipe.data.directions.sections.map((section) => (
              <div class="direction-section">
                <h3>{section.title}</h3>
                <ol>
                  {section.steps.map((step) => (
                    <li>{step}</li>
                  ))}
                </ol>
              </div>
            ))
          ) : (
            <ol>
              {recipe.data.directions.map((step) => (
                <li>{step}</li>
              ))}
            </ol>
          )}
        </section>
      )
    }
  </div>
</Base>

<style>
  header {
    margin-bottom: 4rem;
  }
  
  ul.tags {
    list-style-type: none;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
  }

  section.directions,
  section.ingredients {
    background-color: var(--card-color);
    padding: 2rem;
    filter: drop-shadow(0px 4px 4px #666);
  }

  .tag {
    padding: 0.5em;
  }

  .recipe {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
  }

  @media (max-width: 800px) {
    .recipe {
      grid-template-columns: 1fr; /* Single column */
    }
  }
</style>
