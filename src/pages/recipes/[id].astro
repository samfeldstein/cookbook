---
// This page replaced the recipe layout
import Base from "../../layouts/Base.astro";

// Styles
import "../../styles/_recipe.css";

// Collections
import { getCollection } from "astro:content";

// Functions
// Generate a new path for every collection entry
export async function getStaticPaths() {
  const recipes = await getCollection("recipes");
  return recipes.map((recipe) => ({
    params: { id: recipe.id },
    props: { recipe },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { recipe } = Astro.props;
---

<Base title={recipe.data.title}>
  <hgroup>
    <h1>{recipe.data.title}</h1>
    <ul class="tags">
      {
        recipe.data.tags.map((tag) => (
          <li>
            <a class="tag" href={`/recipes/tags/${tag}`}>
              <i>#{tag}</i>
            </a>
          </li>
        ))
      }
    </ul>
  </hgroup>

  <div class="content">
    {
      recipe.data.source && (
        <p>
          Source:{" "}
          <a href={recipe.data.source.url}> {recipe.data.source.name}</a>.
        </p>
      )
    }

    <section class="recipe">
      {
        recipe.data.ingredients && (
          <section class="ingredients">
            <h2>Ingredients</h2>
            {recipe.data.ingredients.sections &&
            recipe.data.ingredients.sections.length > 0 ? (
              recipe.data.ingredients.sections.map((section) => (
                <div class="ingredient-section">
                  <h3>{section.title}</h3>
                  <ul>
                    {section.ingredients.map((ingredient) => (
                      <li>{ingredient}</li>
                    ))}
                  </ul>
                </div>
              ))
            ) : (
              <ul>
                {recipe.data.ingredients.map((ingredient) => (
                  <li>{ingredient}</li>
                ))}
              </ul>
            )}
          </section>
        )
      }

      {
        recipe.data.directions && (
          <section class="directions">
            <h2>Directions</h2>
            {recipe.data.directions.sections &&
            recipe.data.directions.sections.length > 0 ? (
              recipe.data.directions.sections.map((section) => (
                <div class="direction-section">
                  <h3>{section.title}</h3>
                  <ol>
                    {section.steps.map((step) => (
                      <li>{step}</li>
                    ))}
                  </ol>
                </div>
              ))
            ) : (
              <ol>
                {recipe.data.directions.map((step) => (
                  <li>{step}</li>
                ))}
              </ol>
            )}
          </section>
        )
      }
    </section>

    {
      recipe.data.notes && (
        <section class="notes">
          <h2>Notes</h2>
          <p>{recipe.data.notes}</p>
        </section>
      )
    }
  </div>
</Base>
