---
const { frontmatter } = Astro.props;
---

<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <title>{frontmatter.title} | Cookbook</title>
    <!-- Icons
      - https://evilmartians.com/chronicles/how-to-favicon-in-2021-six-files-that-fit-most-needs
      - Favicon generator: https://realfavicongenerator.net/
      - SVG generator: https://formito.com/tools/favicon
      - Image compressor: https://squoosh.app/
      - SVG optimizer: https://jakearchibald.github.io/svgomg/
      - Favicon checker: https://realfavicongenerator.net/favicon_checker  
    -->
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/svg+xml" sizes="any" href="/favicon.svg" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
</head>

<body>
    <header>
        <h1>{frontmatter.title}</h1>
    </header>

    <main>
        {
            frontmatter.ingredients && (
                <section class="ingredients">
                    <h2>Ingredients</h2>
                    {Array.isArray(frontmatter.ingredients) &&
                    typeof frontmatter.ingredients[0] === "object" ? (
                        // sectioned ingredients
                        frontmatter.ingredients.map((sec) => (
                            <div class="ingredient-section">
                                <h3>{sec.section}</h3>
                                <ul>
                                    {sec.ingredients.map((i) => (
                                        <li>{i}</li>
                                    ))}
                                </ul>
                            </div>
                        ))
                    ) : (
                        // flat list
                        <ul>
                            {frontmatter.ingredients.map((i) => (
                                <li>{i}</li>
                            ))}
                        </ul>
                    )}
                </section>
            )
        }

        {
            frontmatter.directions && (
                <section class="directions">
                    <h2>Directions</h2>
                    {Array.isArray(frontmatter.directions) &&
                    typeof frontmatter.directions[0] === "object" ? (
                        // subsectioned
                        frontmatter.directions.map((sec) => (
                            <div class="direction-section">
                                <h3>{sec.section}</h3>
                                <ol>
                                    {sec.steps.map((step) => (
                                        <li>{step}</li>
                                    ))}
                                </ol>
                            </div>
                        ))
                    ) : (
                        // flat list
                        <ol>
                            {frontmatter.directions.map((step) => (
                                <li>{step}</li>
                            ))}
                        </ol>
                    )}
                </section>
            )
        }
    </main>
</body>
